# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
executors:
  my-executor:
    docker:
      - image: circleci/node:10.16
    working_directory: ~/repo

jobs:
  build:
    executor: my-executor

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          name: Restore cache for root dependencies
          keys:
            - v3-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v3-dependencies-
      - restore_cache:
          name: Restore cache for server dependencies
          keys:
            - v1-serverDeps-{{ checksum "packages/server/package-lock.json" }}
            - v1-serverDeps-
      - restore_cache:
          name: Restore cache for client dependencies
          keys:
            - v1-clientDeps-{{ checksum "packages/client/package-lock.json" }}
            - v1-clientDeps-
      - restore_cache:
          name: Restore cache for utils dependencies
          keys:
            - v1-utilsDeps-{{ checksum "packages/utils/package-lock.json" }}
            - v1-utilsDeps-

      - run: npm install
      - run: npm run bootstrap

      - save_cache:
          name: Save cache for root dependencies
          key: v3-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          name: Cache server dependencies
          key: v1-serverDeps-{{ checksum "packages/server/package-lock.json" }}
          paths:
            - packages/server/node_modules
      - save_cache:
          name: Cache client dependencies
          key: v1-clientDeps-{{ checksum "packages/client/package-lock.json" }}
          paths:
            - packages/client/node_modules
      - save_cache:
          name: Cache utils dependencies
          key: v1-utilsDeps-{{ checksum "packages/utils/package-lock.json" }}
          paths:
            - packages/utils/node_modules

      - run:
          name: Build everything
          command: |
            npm run build:utils
            npm run build:server
            npm run build:client

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ~/repo
          # Must be relative path from root
          paths:
            - node_modules
            - packages/*/lib
            - packages/*/node_modules

  test:
    executor: my-executor

    steps:
      - checkout
      # hopefully, if server requires utils, i'll be there in /lib/
      - attach_workspace:
          at: ~/repo

      - run:
          name: Test
          command: npm run test

  publish:
    executor: my-executor

    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Publish to NPM
          command: |
            npm set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            npm run ci:publish

workflows:
  version: 2
  build-test-and-publish:
    jobs:
      - build
      - test:
          requires:
            - build
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
