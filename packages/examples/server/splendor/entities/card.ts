import { type, filter } from "@colyseus/schema"
import {
  BaseCard,
  IBaseCardOptions,
  faceDownOnlyOwner
} from "@cardsgame/server"

export class Card extends BaseCard {
  type = "card"

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  level: number

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  costD: number // White

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  costS: number // Blue

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  costE: number // Green

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  costR: number // Red

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  costO: number // Black

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  gem: Gems

  // @filter(faceDownOnlyOwner)
  @type("uint8")
  vp: number

  constructor(options: ICardOptions) {
    super(options)
  }
}

export interface ICardOptions extends IBaseCardOptions {
  costD: number
  costS: number
  costE: number
  costR: number
  costO: number
  gem: Gems
  vp: number
}

export enum Gems {
  Diamond,
  Sapphire,
  Emerald,
  Ruby,
  Onyx,
  Gold
}

export const cardsDataLevel1 = [
  [0, 3, 0, 0, 0, 0, 1, 0, 0, 0, 0],
  [0, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0],
  [0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0],
  [0, 2, 0, 0, 2, 0, 1, 0, 0, 0, 0],
  [0, 0, 4, 0, 0, 1, 1, 0, 0, 0, 0],
  [0, 1, 2, 1, 1, 0, 1, 0, 0, 0, 0],
  [0, 2, 2, 0, 1, 0, 1, 0, 0, 0, 0],
  [3, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0],
  [1, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0],
  [0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0],
  [1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0],
  [0, 0, 2, 0, 2, 0, 0, 1, 0, 0, 0],
  [0, 0, 0, 4, 0, 1, 0, 1, 0, 0, 0],
  [1, 0, 1, 2, 1, 0, 0, 1, 0, 0, 0],
  [1, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0],
  [0, 1, 3, 1, 0, 0, 0, 1, 0, 0, 0],
  [2, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],
  [0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 0],
  [1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0],
  [0, 2, 0, 2, 0, 0, 0, 0, 1, 0, 0],
  [0, 0, 0, 0, 4, 1, 0, 0, 1, 0, 0],
  [1, 1, 0, 1, 2, 0, 0, 0, 1, 0, 0],
  [0, 1, 0, 2, 2, 0, 0, 0, 1, 0, 0],
  [1, 3, 1, 0, 0, 0, 0, 0, 1, 0, 0],
  [0, 2, 1, 0, 0, 0, 0, 0, 0, 1, 0],
  [3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
  [1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0],
  [2, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0],
  [4, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0],
  [2, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0],
  [2, 0, 1, 0, 2, 0, 0, 0, 0, 1, 0],
  [1, 0, 0, 1, 3, 0, 0, 0, 0, 1, 0],
  [0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 1],
  [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1],
  [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1],
  [2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1],
  [0, 4, 0, 0, 0, 1, 0, 0, 0, 0, 1],
  [1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 1],
  [2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 1],
  [0, 0, 1, 3, 1, 0, 0, 0, 0, 0, 1]
]

export const cardsDataLevel2 = [
  [0, 0, 0, 5, 0, 2, 1, 0, 0, 0, 0],
  [6, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0],
  [0, 0, 3, 2, 2, 1, 1, 0, 0, 0, 0],
  [0, 0, 1, 4, 2, 2, 1, 0, 0, 0, 0],
  [2, 3, 0, 3, 0, 1, 1, 0, 0, 0, 0],
  [0, 0, 0, 5, 3, 2, 1, 0, 0, 0, 0],
  [0, 5, 0, 0, 0, 2, 0, 1, 0, 0, 0],
  [0, 6, 0, 0, 0, 3, 0, 1, 0, 0, 0],
  [0, 2, 2, 3, 0, 1, 0, 1, 0, 0, 0],
  [2, 0, 0, 1, 4, 2, 0, 1, 0, 0, 0],
  [0, 2, 3, 0, 3, 1, 0, 1, 0, 0, 0],
  [5, 3, 0, 0, 0, 2, 0, 1, 0, 0, 0],
  [0, 0, 5, 0, 0, 2, 0, 0, 1, 0, 0],
  [0, 0, 6, 0, 0, 3, 0, 0, 1, 0, 0],
  [2, 3, 0, 0, 2, 1, 0, 0, 1, 0, 0],
  [3, 0, 2, 3, 0, 1, 0, 0, 1, 0, 0],
  [4, 2, 0, 0, 1, 2, 0, 0, 1, 0, 0],
  [0, 5, 3, 0, 0, 2, 0, 0, 1, 0, 0],
  [0, 0, 0, 0, 5, 2, 0, 0, 0, 1, 0],
  [0, 0, 0, 6, 0, 3, 0, 0, 0, 1, 0],
  [2, 0, 0, 2, 3, 1, 0, 0, 0, 1, 0],
  [1, 4, 2, 0, 0, 2, 0, 0, 0, 1, 0],
  [0, 3, 0, 2, 3, 1, 0, 0, 0, 1, 0],
  [3, 0, 0, 0, 5, 2, 0, 0, 0, 1, 0],
  [5, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1],
  [0, 0, 0, 0, 6, 3, 0, 0, 0, 0, 1],
  [3, 2, 2, 0, 0, 1, 0, 0, 0, 0, 1],
  [0, 1, 4, 2, 0, 2, 0, 0, 0, 0, 1],
  [3, 0, 3, 0, 2, 1, 0, 0, 0, 0, 1],
  [0, 0, 5, 3, 0, 2, 0, 0, 0, 0, 1]
]

export const cardsDataLevel3 = [
  [0, 0, 0, 0, 7, 4, 1, 0, 0, 0, 0],
  [3, 0, 0, 0, 7, 5, 1, 0, 0, 0, 0],
  [3, 0, 0, 3, 6, 4, 1, 0, 0, 0, 0],
  [0, 3, 3, 5, 3, 3, 1, 0, 0, 0, 0],
  [7, 0, 0, 0, 0, 4, 0, 1, 0, 0, 0],
  [7, 3, 0, 0, 0, 5, 0, 1, 0, 0, 0],
  [6, 3, 0, 0, 3, 4, 0, 1, 0, 0, 0],
  [3, 0, 3, 3, 5, 3, 0, 1, 0, 0, 0],
  [0, 7, 0, 0, 0, 4, 0, 0, 1, 0, 0],
  [0, 7, 3, 0, 0, 5, 0, 0, 1, 0, 0],
  [3, 6, 3, 0, 0, 4, 0, 0, 1, 0, 0],
  [5, 3, 0, 3, 3, 3, 0, 0, 1, 0, 0],
  [0, 0, 7, 0, 0, 4, 0, 0, 0, 1, 0],
  [0, 0, 7, 3, 0, 5, 0, 0, 0, 1, 0],
  [0, 3, 6, 3, 0, 4, 0, 0, 0, 1, 0],
  [3, 5, 3, 0, 3, 3, 0, 0, 0, 1, 0],
  [0, 0, 0, 7, 0, 4, 0, 0, 0, 0, 1],
  [0, 0, 0, 7, 3, 5, 0, 0, 0, 0, 1],
  [0, 0, 3, 6, 3, 4, 0, 0, 0, 0, 1],
  [3, 3, 5, 3, 0, 3, 0, 0, 0, 0, 1]
]
